<launch>

  <node pkg="tf2_ros" type="static_transform_publisher" name="camera_to_base_broadcaster" args="0.6 0 0.32 3.14159 0.65 0 world camera_link" />

  <arg name="serial_no"           default=""/>
  <arg name="usb_port_id"         default=""/>
  <arg name="device_type"         default=""/>
  <arg name="json_file_path"      default=""/>
  <arg name="camera"              default="camera"/>
  <arg name="tf_prefix"           default="$(arg camera)"/>
  <arg name="external_manager"    default="false"/>
  <arg name="manager"             default="realsense2_camera_manager"/>
  <arg name="output"              default="screen"/>
  <arg name="respawn"              default="false"/>

  <arg name="fisheye_width"       default="-1"/>
  <arg name="fisheye_height"      default="-1"/>
  <arg name="enable_fisheye"      default="false"/>

  <arg name="depth_width"         default="-1"/>
  <arg name="depth_height"        default="-1"/>
  <arg name="enable_depth"        default="true"/>

  <arg name="confidence_width"    default="-1"/>
  <arg name="confidence_height"   default="-1"/>
  <arg name="enable_confidence"   default="true"/>
  <arg name="confidence_fps"      default="-1"/>

  <arg name="infra_width"         default="848"/>
  <arg name="infra_height"        default="480"/>
  <arg name="enable_infra"        default="false"/>
  <arg name="enable_infra1"       default="false"/>
  <arg name="enable_infra2"       default="false"/>
  <arg name="infra_rgb"           default="false"/>

  <arg name="color_width"         default="-1"/>
  <arg name="color_height"        default="-1"/>
  <arg name="enable_color"        default="true"/>

  <arg name="fisheye_fps"         default="-1"/>
  <arg name="depth_fps"           default="-1"/>
  <arg name="infra_fps"           default="30"/>
  <arg name="color_fps"           default="-1"/>
  <arg name="gyro_fps"            default="-1"/>
  <arg name="accel_fps"           default="-1"/>
  <arg name="enable_gyro"         default="false"/>
  <arg name="enable_accel"        default="false"/>

  <arg name="enable_pointcloud"         default="true"/>
  <arg name="pointcloud_texture_stream" default="RS2_STREAM_COLOR"/>
  <arg name="pointcloud_texture_index"  default="0"/>
  <arg name="allow_no_texture_points"   default="false"/>
  <arg name="ordered_pc"                default="false"/>

  <arg name="enable_sync"               default="false"/>
  <arg name="align_depth"               default="false"/>

  <arg name="publish_tf"                default="true"/>
  <arg name="tf_publish_rate"           default="0"/>

  <arg name="filters"                   default=""/>
  <arg name="clip_distance"             default="-2"/>
  <arg name="linear_accel_cov"          default="0.01"/>
  <arg name="initial_reset"             default="false"/>
  <arg name="reconnect_timeout"         default="6.0"/>
  <arg name="wait_for_device_timeout"   default="-1.0"/>
  <arg name="unite_imu_method"          default=""/>
  <arg name="topic_odom_in"             default="odom_in"/>
  <arg name="calib_odom_file"           default=""/>
  <arg name="publish_odom_tf"           default="true"/>

  <arg name="stereo_module/exposure/1"  default="7500"/>
  <arg name="stereo_module/gain/1"      default="16"/>
  <arg name="stereo_module/exposure/2"  default="1"/>
  <arg name="stereo_module/gain/2"      default="16"/>
  


  <group ns="$(arg camera)">
    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <arg name="tf_prefix"                value="$(arg tf_prefix)"/>
      <arg name="external_manager"         value="$(arg external_manager)"/>
      <arg name="manager"                  value="$(arg manager)"/>
      <arg name="output"                   value="$(arg output)"/>
      <arg name="respawn"                  value="$(arg respawn)"/>
      <arg name="serial_no"                value="$(arg serial_no)"/>
      <arg name="usb_port_id"              value="$(arg usb_port_id)"/>
      <arg name="device_type"              value="$(arg device_type)"/>
      <arg name="json_file_path"           value="$(arg json_file_path)"/>

      <arg name="enable_pointcloud"        value="$(arg enable_pointcloud)"/>
      <arg name="pointcloud_texture_stream" value="$(arg pointcloud_texture_stream)"/>
      <arg name="pointcloud_texture_index"  value="$(arg pointcloud_texture_index)"/>
      <arg name="enable_sync"              value="$(arg enable_sync)"/>
      <arg name="align_depth"              value="$(arg align_depth)"/>

      <arg name="fisheye_width"            value="$(arg fisheye_width)"/>
      <arg name="fisheye_height"           value="$(arg fisheye_height)"/>
      <arg name="enable_fisheye"           value="$(arg enable_fisheye)"/>

      <arg name="depth_width"              value="$(arg depth_width)"/>
      <arg name="depth_height"             value="$(arg depth_height)"/>
      <arg name="enable_depth"             value="$(arg enable_depth)"/>

      <arg name="confidence_width"         value="$(arg confidence_width)"/>
      <arg name="confidence_height"        value="$(arg confidence_height)"/>
      <arg name="enable_confidence"        value="$(arg enable_confidence)"/>
      <arg name="confidence_fps"           value="$(arg confidence_fps)"/>

      <arg name="color_width"              value="$(arg color_width)"/>
      <arg name="color_height"             value="$(arg color_height)"/>
      <arg name="enable_color"             value="$(arg enable_color)"/>

      <arg name="infra_width"              value="$(arg infra_width)"/>
      <arg name="infra_height"             value="$(arg infra_height)"/>
      <arg name="enable_infra"             value="$(arg enable_infra)"/>
      <arg name="enable_infra1"            value="$(arg enable_infra1)"/>
      <arg name="enable_infra2"            value="$(arg enable_infra2)"/>
      <arg name="infra_rgb"                value="$(arg infra_rgb)"/>

      <arg name="fisheye_fps"              value="$(arg fisheye_fps)"/>
      <arg name="depth_fps"                value="$(arg depth_fps)"/>
      <arg name="infra_fps"                value="$(arg infra_fps)"/>
      <arg name="color_fps"                value="$(arg color_fps)"/>
      <arg name="gyro_fps"                 value="$(arg gyro_fps)"/>
      <arg name="accel_fps"                value="$(arg accel_fps)"/>
      <arg name="enable_gyro"              value="$(arg enable_gyro)"/>
      <arg name="enable_accel"             value="$(arg enable_accel)"/>

      <arg name="publish_tf"               value="$(arg publish_tf)"/>
      <arg name="tf_publish_rate"          value="$(arg tf_publish_rate)"/>

      <arg name="filters"                  value="$(arg filters)"/>
      <arg name="clip_distance"            value="$(arg clip_distance)"/>
      <arg name="linear_accel_cov"         value="$(arg linear_accel_cov)"/>
      <arg name="initial_reset"            value="$(arg initial_reset)"/>
      <arg name="reconnect_timeout"        value="$(arg reconnect_timeout)"/>
      <arg name="wait_for_device_timeout"  value="$(arg wait_for_device_timeout)"/>
      <arg name="unite_imu_method"         value="$(arg unite_imu_method)"/>
      <arg name="topic_odom_in"            value="$(arg topic_odom_in)"/>
      <arg name="calib_odom_file"          value="$(arg calib_odom_file)"/>
      <arg name="publish_odom_tf"          value="$(arg publish_odom_tf)"/>
      <arg name="stereo_module/exposure/1" value="$(arg stereo_module/exposure/1)"/>
      <arg name="stereo_module/gain/1"     value="$(arg stereo_module/gain/1)"/>
      <arg name="stereo_module/exposure/2" value="$(arg stereo_module/exposure/2)"/>
      <arg name="stereo_module/gain/2"     value="$(arg stereo_module/gain/2)"/>

      <arg name="allow_no_texture_points"  value="$(arg allow_no_texture_points)"/>
      <arg name="ordered_pc"               value="$(arg ordered_pc)"/>
      
    </include>
  </group>

  <!-- ROBOT STATE PUBLISHER FOR RVIZ VISUALIZATION -->

  <arg name="hardware_version" default="2" /> 
	
  <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find grasp_n_sorter)/urdf/v1/niryo_one.urdf.xacro'" if="$(eval hardware_version == 1)"/>
  <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find grasp_n_sorter)/urdf/v2/niryo_one.urdf.xacro'" if="$(eval hardware_version == 2)"/>
	<arg name="gui" default="true" />

	<param name="robot_description" command="$(arg urdf_file)" />
	<param name="use_gui" value="$(arg gui)" />

	<!-- <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" /> -->
  <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
	<!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find niryo_one_description)/config/default_config.rviz" /> -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find grasp_n_sorter)/config/config_project.rviz" />

  <!-- GRASP POSE DETECTION ALGORITHM -->

  <!-- Load hand geometry parameters -->  
  <include file="$(find gpd)/launch/hand_geometry.launch">
    <arg name="node" value="detect_grasps" />
  </include>
  
  <!-- Load classifier parameters -->
  <include file="$(find gpd)/launch/lenet/ur5_classifier_15channels.launch">
    <arg name="node" value="detect_grasps" />
  </include>
  
	<node name="detect_grasps" pkg="gpd" type="detect_grasps" output="screen">
    
        <!-- If sequential importance sampling is used (default: false) -->
        <param name="use_importance_sampling" value="false" />
            
        <!-- What type of point cloud is used and what ROS topic it comes from -->
        <param name="cloud_type" value="1" /> <!-- 0: PointCloud2, 1: CloudIndexed, 2: CloudSamples -->
        <param name="cloud_topic" value="/cloud_indexed" />
        
        <!-- (optional) The ROS topic that the samples come from (default: an empty string) -->
        <param name="samples_topic" value="" />
        
        <!-- Plotting parameters -->
        <param name="plot_normals" value="false" />
        <param name="plot_samples" value="false" />    
        <param name="plot_candidates" value="false" />
        <param name="plot_filtered_grasps" value="false" />
        <param name="plot_valid_grasps" value="false" />
        <param name="plot_clusters" value="false" />
        <param name="plot_selected_grasps" value="false" />
        <param name="rviz_topic" value="grasps_rviz" />
        
        <!-- Preprocessing of point cloud -->
        <param name="voxelize" value="true"/>
        <param name="remove_outliers" value="false"/>
        <!-- <rosparam param="workspace"> [-0.10, 0.10, -0.05, 0.05, 0.45, 0.60] </rosparam> -->
        <rosparam param="workspace"> [-0.10, 0.10, -0.11, 0.05, 0.40, 0.58] </rosparam>
        <!-- <rosparam param="camera_position"> [0.6, 0, 0.3] </rosparam> HERE -->
        <rosparam param="camera_position"> [0.6 0 0.32] </rosparam>
                
        <!-- General parameters -->
        <param name="num_samples" value="120" />
        <param name="num_threads" value="8" />
        
        <!-- Parameters for local grasp candidate search -->
        <param name="nn_radius" value="0.01" />
        <!-- <param name="nn_radius" value="0.1" /> -->
        <param name="num_orientations" value="8" /> <!-- Number of orientations to consider -->
        
        <!-- Filtering of grasp candidates --> 
        <param name="filter_grasps" value="false" /> <!-- on workspace and robot hand aperture -->
        <rosparam param="workspace_grasps"> [-0.10, 0.10, -0.11, 0.05, 0.40, 0.58] </rosparam>
        <!-- <rosparam param="workspace_grasps"> [-0.10, 0.10, -0.05, 0.05, 0.45, 0.60] </rosparam> -->
        <param name="filter_half_antipodal" value="false"/> <!-- on half antipodal -->
        
        <!-- Filtering of grasps which are too low on (i.e. too close to) table -->
        <param name="filter_table_side_grasps" value="true" />
        <!-- <rosparam param="vertical_axis"> [0, 0, 0] </rosparam> HERE-->
        <rosparam param="vertical_axis"> [0, 0, 1] </rosparam>
        <param name="angle_thresh" value="0.1" />
        <param name="table_height" value="0.0" />
        <param name="table_thresh" value="0.01" />
        
        <!-- Grasp image creation -->
        <param name="create_image_batches" value="false" /> <!-- creates grasp images in batches (less memory usage) -->
        <param name="remove_plane_before_image_calculation" value="true" /> <!-- removes table plane from point cloud to speed up shadow computations -->
        
        <!-- Clustering of grasps -->
        <param name="min_inliers" value="1" />
            
        <!-- Grasp selection -->
        <param name="min_score_diff" value="0" />
        <param name="min_aperture" value="0.02" />
        <param name="max_aperture" value="0.04" />
        <!-- <param name="min_aperture" value="0.1" />
        <param name="max_aperture" value="0.01" /> -->
        <param name="num_selected" value="5" />
        
	</node>

    <node pkg="grasp_n_sorter" type="cloud_publisher_rviz.py" name="cloud_publisher_rviz" output="screen" />

    <node pkg="grasp_n_sorter" type="identify_object.py" name="identify_object" output="screen" />
    
    <!-- <arg name="frame_id_pc" default="camera_color_optical_frame"/> -->
    <arg name="frame_id_pc" default="camera_color_optical_frame"/>

    <node pkg="grasp_n_sorter" type="get_grasps_server.py" name="get_grasps_server" output="screen">
      <param name="frame_id_pc" value="$(arg frame_id_pc)"/>
    </node>


</launch>
